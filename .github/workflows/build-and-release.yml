name: Build & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build, lint, typecheck, package
    runs-on: ubuntu-latest
    outputs:
      archive: ${{ steps.metadata.outputs.archive }}
      plugin-id: ${{ steps.metadata.outputs.plugin-id }}
      plugin-version: ${{ steps.metadata.outputs.plugin-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: pnpm/action-setup@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Typecheck
        run: pnpm run typecheck
      - name: Lint
        run: pnpm run lint
      - name: Unit tests
        run: pnpm run test:ci
      - name: Build
        run: pnpm run build

      - name: Get plugin metadata
        id: metadata
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
          export GRAFANA_PLUGIN_VERSION=$(cat dist/plugin.json | jq -r .info.version)
          export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-${GRAFANA_PLUGIN_VERSION}.zip
          echo "plugin-id=${GRAFANA_PLUGIN_ID}" >> $GITHUB_OUTPUT
          echo "plugin-version=${GRAFANA_PLUGIN_VERSION}" >> $GITHUB_OUTPUT
          echo "archive=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_OUTPUT

      - name: Package plugin
        run: |
          mv dist ${PLUGIN_ID}
          zip ${ARCHIVE} ${PLUGIN_ID} -r
        env:
          ARCHIVE: ${{ steps.metadata.outputs.archive }}
          PLUGIN_ID: ${{ steps.metadata.outputs.plugin-id }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.metadata.outputs.archive }}
          path: ${{ steps.metadata.outputs.archive }}
          retention-days: 7

  release:
    name: Create GitHub Release (on tag)
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Download packaged zip
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.archive }}
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ needs.build.outputs.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
